pragma circom 2.2.2;

include "babyjubjub.circom";

template Tester {
    
    signal input in;
    signal output out;

    BabyJubJubPoint() { twisted_edwards } a;
    BabyJubJubPoint() { twisted_edwards } b;
    BabyJubJubPoint() { twisted_edwards } c;

    BabyJubJubScalarField() x_fr;
    BabyJubJubScalarField() y_fr;
    BabyJubJubScalarField() z_fr;

    BabyJubJubBaseField() x_fq;
    BabyJubJubBaseField() y_fq;
    BabyJubJubBaseField() z_fq;

    x_fr.f <== 974702657547524289083458286093415891087722395818179653312912891021790281865;
    y_fr.f <== 1349391061432402225851424785187822365392125343576213258463045158875877862010;
    z_fr.f <== 871327393485062856402920825038263058036569291482410961997174114099742208541;

    x_fq.f <== 7635940231166461559743911368068085893223435965227444771661666474118272601539;
    y_fq.f <== 14410948882403828236940551690863828050999097843481586328909715729172535448142;
    z_fq.f <== 10116753512442813513341465614699062870687867030491728121605599588948473856102;

    
    a.x <== 13852210342980036242488216946117211826283486560286321713191426447557617672848;
    a.y <== 16619927274608990088320429324634738785056223501341385107818435812328029872233;
    b.x <== 11815925977257892037720315523139995537974726661448698895296473143293248776265;
    b.y <== 15672883364677039803777980168632673365350941870077356968171203160380631157209;
    c.x <== 18278048663260200973855255675276196898882350525216070151141140641897268569238;
    c.y <== 5813169746239956734894173676142183017479392820977892383701532143734147064073;

    

    // check BabyJubJubScalarMul
    BabyJubJubPoint() scalar_mul_kat0 <== BabyJubJubScalarMul()(x_fr, a);
    BabyJubJubPoint() scalar_mul_kat1 <== BabyJubJubScalarMul()(y_fr, a);
    BabyJubJubPoint() scalar_mul_kat2 <== BabyJubJubScalarMul()(z_fr, a);
    BabyJubJubPoint() scalar_mul_kat3 <== BabyJubJubScalarMul()(x_fr, b);
    BabyJubJubPoint() scalar_mul_kat4 <== BabyJubJubScalarMul()(y_fr, b);
    BabyJubJubPoint() scalar_mul_kat5 <== BabyJubJubScalarMul()(z_fr, b);

    assert(scalar_mul_kat0.x == 8292168176599860036511313613086027608747613736967317894164668067301391989488);
    assert(scalar_mul_kat0.y == 14674236266082220100504201132673914726468524306290982654246184829622186531100);

    assert(scalar_mul_kat1.x == 3448708339107175569635418677073863151360233938259595542706574019059228685795);
    assert(scalar_mul_kat1.y == 16502773804919056165006670757902657023983894592063706974197836117580162623540);

    assert(scalar_mul_kat2.x == 11458114319089649497326903349697534971508172399640224023252589155711459883997);
    assert(scalar_mul_kat2.y == 8493383852066662203755167469227350534670723797789946493409226246333499340425);

    assert(scalar_mul_kat3.x == 15446422568964186620462611899149379627064374963512605191644629544286006979626);
    assert(scalar_mul_kat3.y == 21389825699933786158101001040322501217739241891143897753149653134132766738677);

    assert(scalar_mul_kat4.x == 7500655952075762766696880386567893301280686794344898300996439511359284765693);
    assert(scalar_mul_kat4.y == 1224007352433545158148351001508025160105244785704753725161108424312129872618);

    assert(scalar_mul_kat5.x == 11022182374752428543244794640227296513207169075820780830224397034212120311087);
    assert(scalar_mul_kat5.y == 785863979921821253955515955372993427757581452797407760667255245110799432486);

    // VerifyDlog()(proof, a,b,c,d);
    //
   BabyJubJubPoint() scalar_mul_base_kat0 <== BabyJubJubScalarMulBaseField()(x_fq, a);
   BabyJubJubPoint() scalar_mul_base_kat1 <== BabyJubJubScalarMulBaseField()(y_fq, a);
   BabyJubJubPoint() scalar_mul_base_kat2 <== BabyJubJubScalarMulBaseField()(z_fq, a);
   BabyJubJubPoint() scalar_mul_base_kat3 <== BabyJubJubScalarMulBaseField()(x_fq, b);
   BabyJubJubPoint() scalar_mul_base_kat4 <== BabyJubJubScalarMulBaseField()(y_fq, b);
   BabyJubJubPoint() scalar_mul_base_kat5 <== BabyJubJubScalarMulBaseField()(z_fq, b);

    assert(scalar_mul_base_kat0.x == 7331811952161354833759632466300792047971267791171092060693626004621688595462);
    assert(scalar_mul_base_kat0.y == 5664735800565765576027417760862991456206023655163487791029870349791491257049);

    assert(scalar_mul_base_kat1.x == 12008956823787348271168946274019310253199160617201003646165755512453147106010);
    assert(scalar_mul_base_kat1.y == 20288474237081155321243134592591004810238835444910404958321897464835957722220);

    assert(scalar_mul_base_kat2.x == 11344025440567798950084619308436425738898974976822886221698573349772381774843);
    assert(scalar_mul_base_kat2.y == 7660920130498268727246685075798179453665477623968188463703205807149810775106);

    assert(scalar_mul_base_kat3.x == 11975952874758856689202098503678374903334918458907859623478663320733652022558);
    assert(scalar_mul_base_kat3.y == 21701989191654418172766581204730845179594605845822205409485284378276031534753);

    assert(scalar_mul_base_kat4.x == 14535901858882786524525586646151931857777195908798910056140001825706076826155);
    assert(scalar_mul_base_kat4.y == 21059472500960235149700276248422425145807409244112954140801591549161213353546);

    assert(scalar_mul_base_kat5.x == 13691758297345296020398810946947220872948081765672248594642486598154078831835);
    assert(scalar_mul_base_kat5.y == 12092527492015466207375283094997062840115857228825457794179266561345756046);


    // baby jubjub sub test
    BabyJubJubPoint() { twisted_edwards } sub_a;
    BabyJubJubPoint() { twisted_edwards } sub_b;
    BabyJubJubPoint() { twisted_edwards } identity;
    sub_a.x <== 17198511433894968793465431674681704063214539090234231940658916129372939658280;
    sub_a.y <== 7096022295031894750538718201677443509070855497286293707399348308180894474126;
    sub_b.x <== 1370195182723755180330139957608574837756381581331631262925562351487402786675;
    sub_b.y <== 4914841023884182990424920031862777928930597684365442051411609356476877989803;
    identity.x <== 0;
    identity.y <== 1;

    BabyJubJubPoint() { twisted_edwards } sub_kat0 <== BabyJubJubSub()(sub_a, sub_b);
    BabyJubJubPoint() { twisted_edwards } sub_kat1 <== BabyJubJubSub()(sub_b, sub_a);
    BabyJubJubPoint() { twisted_edwards } sub_kat2 <== BabyJubJubSub()(sub_a, identity);
    assert(sub_kat0.x == 13400200893630892187031549597377549332518924039038491829675818487460013008688);
    assert(sub_kat0.y == 17980483594907442009132964055924958470283850998225911884057066193996295304747);

    assert(sub_kat1.x == 8488041978208383035214856147879725756029440361377542514022385699115795486929);
    assert(sub_kat1.y == 17980483594907442009132964055924958470283850998225911884057066193996295304747);

    assert(sub_kat2.x == 17198511433894968793465431674681704063214539090234231940658916129372939658280);
    assert(sub_kat2.y == 7096022295031894750538718201677443509070855497286293707399348308180894474126);


    BabyJubJubScalarField() in_fr_kat0 <== BabyJubJubIsInFr()(0);
    BabyJubJubScalarField() in_fr_kat1 <== BabyJubJubIsInFr()(1);
    BabyJubJubScalarField() in_fr_kat2 <== BabyJubJubIsInFr()(2736030358979909402780800718157159386076813972158567259200215660948447373040);

    
    out <== in;

}

component main = Tester();
