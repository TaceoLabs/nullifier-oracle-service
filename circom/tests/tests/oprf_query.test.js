const { wasm } = require("circom_tester");
const { expect } = require("chai");
const path = require("path");

describe("Oprf Query (d=10)", function () {
  this.timeout(10000);

  let circuit;
  before(async () => {
    circuit = await wasm(
      path.join(__dirname, "circuits/oprf_query_test.circom"),
      { include: [path.join(__dirname, "../../")] },
    );
    await circuit.loadConstraints();
  });


  it("kat0 success", async () => {
    const witness = await circuit.calculateWitness({pk: [
      [12926335063978273448089741990924527827340544719094547009383816569581332416077n, 13601884821482902342518099314271713773927626584774316227795436923954815979717n],
      [17450117902723239913277610979414100673447132837920489702213807876612747509643n, 16137008596637751386179454566413586733682162455789939096403985283452780455164n],
      [16237843485360606587948110136866452104450238956897325525580364972442323282231n, 3038199591545151035096046129187054767485743573812817709607657634776566820033n],
      [17191566428545261714452004623071303139696553222638026287816371855646740145905n, 93070624739026369871981807504394783485945227376954894449406808936424643950n],
      [15941546582704556566009683779200328340768038766577446590429470381128345714224n, 6815816660179804382991025529751543224116895366190337208853189682550659201573n],
      [20600691266336331279034026612799520212438838834101681366245799348198930584061n, 2929014319892711941993425292447088381458360932720775139607412714549140755507n],
      [21205212545400683746417587413459096336124716248684161693010042948678074657273n, 13514902520888721899095605594384356845757660861027099037056854100930738545107n]
    ],
    pk_index: 0n,
    s: 2364413558049615625319842141782619041889285871538502856649701262922425213004n,
    r: [6175612728637629485087191228020330116606602022719282638712380102842504854908n, 17437243393862770527889891370658737731377038475147560198044797003868574678179n],
    cred_type_id: 3414707727665405215413872560007166747682162426669267667947566666945224874361n,
    cred_pk: [3911939777713244726036470610724914218301380017737886149469021643561666735476n, 7797629098545048698495189705475406627806430965193809733158656266154222463350n],
    cred_hashes: [13977834369929188974757768747349799868191471529117526579503803036696137904793n, 6313794860217247756634274584520282195123758390973784975719163237885969588988n],
    cred_genesis_issued_at: 1785158915210294107n,
    cred_expires_at: 4155967309548383240n,
    cred_s: 1780690930310289378915338565504462637839648711264641836741423338318195078335n,
    cred_r: [4053928218991411219715757732459205792542179676359226209806599555981120218957n, 16464089594192569269304696136577195835829781727534533754463681827521912387848n],
    current_time_stamp: 2649580743198312473n,
    merkle_root: 21814879738315839607612810901470394522159443117785754878388531030240687945121n,
    depth: 10n,
    mt_index: 619n,
    siblings: [
      585667135721753969363509939300211011246556245223812717046690099385593273174n,
      13831276848914456433029944485688452931943276765267741191127219913539274952909n,
      15123163260382119529154699958310842429671386656986509951998058885724184625211n,
      3698702788246529553998844916267818368435299657182417440867583687256534559455n,
      15009307841198748046734354117872496801061930613634362932433916018409464931320n,
      17755219582132495894705533450858798905341479365658436522558995884914908206475n,
      4510870697710898789031470398971957650637843318989665041899201573351849687225n,
      13728601500714660164204724228361781808217876930452909341427924627120091660145n,
      367163834445130469708330074562703722303807574404567970933209548626671695554n,
      10749291063558121804414082224321566190292085012775435926940002682854965857323n
    ],
    beta: 1140356135826306566819741125920391259145283870741121629642574110498733923956n,
    rp_id: 14543781253279221655341348046093482030359842858497268799758461103786468968520n,
    action: 11645641403676661130561889787211885818940845317622158566969546584908643962625n,
    nonce: 2236132571319938347910518696643047589185681298608183023074417259533825907089n}, true);
 await circuit.assertOut(witness, {
    q: [19835723778083871419514662517727270835340903087582795899030891051326373360547n, 2294171513652264915547750236737808874693400457197058622699756260222886603019n]
    });
    await circuit.checkConstraints(witness);
  });
});
