const { wasm } = require("circom_tester");
const { expect } = require("chai");
const path = require("path");

describe("Keygen (d=5, n=9)", function () {
  this.timeout(10000);

  let circuit;
  before(async () => {
    circuit = await wasm(
      path.join(__dirname, "circuits/keygen_test.circom"),
      { include: [path.join(__dirname, "../../")] },
    );
    await circuit.loadConstraints();
  });


  it("kat0 success", async () => {
    const witness = await circuit.calculateWitness({my_sk: 370014454396238097306980436798284234788504584752463332492223799364754260811n,
      pks: [
        [1918506960356052767270720151628662368531641300961480472163120934701724597891n, 18140162239983133116023098657294112211481208495946397129258831414011553738611n], [19073391701462347538523909989433101015154982542803263208298114996755300902272n, 13055503748124823942370500716106865348874587408222118272060936799905976088547n], [19187525471008457967731444069596753542390823101983164352919127462989744628641n, 4734660263677069123433638686086128131472975069302164629852635366053458688451n], [20305151757049841482772824458358661840046712984560697612574142766635651570649n, 20665406474573814647562983693984990028325772751148246945144717828565519489561n], [1648041078255597685950751603036846910418213189634211176143194121800520009639n, 20699772274733970062554171047671302472587264329104434010304623829326346073924n], [16159654833921573124345048683372631840264587500990745509645617807208606870612n, 18369594248480240616395097000759345140771580575115551967956251715769417548483n], [1529897221404727152200507849169392997250878837721207433175622372662400425564n, 4253036753834417557968928091208130036889745762518437468072503457982987042395n], [18615537245377214738020872652984125550797452509410423279422808830974580338951n, 20904564316441956290403331481348451578265379272936813322826109586946599248354n], [6552323892617462616898543755221290771627987449854678757182004143923349244242n, 20007854053697647197399968604186801546081532758544143905150405941351397718649n]
     ],
      poly: [1013296663805782789208848899400037373687571076106956106779744893058423531135n, 2405401793732232510756527252302999771945426332591571858898019285342260890202n, 2477418787552573520665397131044322866032250878502624526289084394700907335404n, 311542036737458646767563942039817468769957065207509241406164662768005854626n, 2340786019255898244348382735877175099544474170175931021827488492534514583687n, 1364872595237286992947698783969432867312556377963440917870254413016750409016n],
      nonces: [18788263614476328773624349477387903117595242438551207121825319356715866036557n, 2242242191598544280277044463033560684431875655084155164803796828609766485035n, 6146817087726914954678055935708363295987730130356786133618726200035382131019n, 11855803865754999887687546092103263852121389833795637412206165066936189000049n, 4064706659919065086841630070449140928310552587127488695752762291101215022134n, 7599936769028180645781979822855961789278844381837399468906934562709747458480n, 2389505925633230910714684735898443056508491076410651667114657516831176783284n, 2314824018822646045807627796560263973785496652496514638786934899362740541251n, 21639711473253380693599985114031967133369621236421637235393336241202300597736n]}, true);
 await circuit.assertOut(witness, {
    my_pk: [1918506960356052767270720151628662368531641300961480472163120934701724597891n, 18140162239983133116023098657294112211481208495946397129258831414011553738611n],
    comm_input_share: [16447240443976294911063513807281873572929797950552765478488096494784522171826n, 14458194176536212192351015362535189396355163516054987395286868735209788647105n],
    comm_coeffs: 21595609687423137974944345495805578076526060237860058918373754222437697739243n,
    ciphertexts: [14526695821791972571088263391442216535873348509774553089666730081193983012909n, 19443887500879065503344939005780089346093416477326653662805262726727053138679n, 7478992230326953246222026438798894593493257055976648777807933174776246805861n, 11751287775559338759160623753717752652015306898033755855440220200959090300970n, 5340883216497839685465158271521907284095598286396262489574059337953823383638n, 20782321104712380688942938461590438294666703288337347384058592876455940476468n, 8097967846795611126811354323482418065118936944326419539045411575606773310041n, 2317522897340665496554253972705561415103531931207275530596582902776747654838n, 20896331025443498383133618324095652507335794437993836062492541700480548113535n],
    comm_shares: [
        [12578185782684228099925053521299365155572890293631305972843192645101024509081n, 12395936469348575140378938186477836712902896721024692213344704455099339169579n], [5685690548623940018645665730643199153184380306394444265152702146051991206870n, 17591799418813104869826130924657747511580298117601321648497480116183438800332n], [14248617320477358300615706494748367818191774364224338253533693138249425852524n, 18755456283841522837743293849750990606820509944379477819236889498708453044835n], [2210226802597929405897495492276048616637881179033945888538131297187415309506n, 14219483744398432670201954737060846036469374814744549492528226457729773123136n], [19559875621743759826861412529338347347398591709322645901302744475114005645005n, 9813941753797080138649382061422218430871548707363169036178967949443421417678n], [7902043311050887500467908272249024792195521799188571830298943829966915536100n, 9492985062910532390292789200555848556357549636585375556849626579850851549162n], [16053257284229796555055121172323747443236965991070590306572944548041519532866n, 15427706820919408848892432430821037085484935596447787772151290913447274394322n], [18017978268404404689004821804959990413136845320265210356902940009172553275621n, 6836020834120175528780991278084401552037576941829844485137496068246028106055n], [6349391927804978080698136544295063713174276559457208991210803082569566902754n, 7228145654264772980496445370139843069744672807548072719058223648527325869092n]
    ]
    });
    await circuit.checkConstraints(witness);
  });
});
