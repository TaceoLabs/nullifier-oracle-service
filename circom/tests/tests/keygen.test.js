const { wasm } = require("circom_tester");
const { expect } = require("chai");
const path = require("path");

describe("Keygen (d=5, n=9)", function () {
  this.timeout(10000);

  let circuit;
  before(async () => {
    circuit = await wasm(
      path.join(__dirname, "circuits/keygen_test.circom"),
      { include: [path.join(__dirname, "../../")] },
    );
    await circuit.loadConstraints();
  });


  it("kat0 success", async () => {
    const witness = await circuit.calculateWitness({my_sk: 2229726642844202220977015694782416460149821743877006866176493619809477520965n,
      pks: [
        [17658235242353777763339519567374123148591156029885664020152838013758931842134n, 21023089279599913423952753517404411030832637850248859055201176298213357666664n],
        [19792042214735629301049808323691529817946567405478681939302797301868889595729n, 12348768018862385317397909543275582763660364148389774078650778225211927702739n],
        [19786417520477630354946802094300438442888696553128741946785348309472083171228n, 20022038054323364800081340265070184253313417486274924769871569220039193952706n],
        [12096393739180712150168533404808888506860804125551312550451809050750569477038n, 19099532248385519090671901076442314923592934435839225861462912815168909554469n],
        [4741670872258239452482728403971753366208106550283305165320230512837643567059n, 21880666484100150186338438748502227637527485744828067994247708481961026495054n],
        [3806214270740110754370339678766861792531587632929086687246565919969267189864n, 7915908220291478569391378082190142768915103046960898283651458101520273130298n],
        [1740088429688600006582873878489270821782459956003368573859995573348678104290n, 10165603376187069826613668866936522907767260308152831743044199640976088267691n],
        [8434954573728081799775069337152334561336051982886843712608922144968411879467n, 7239952865219145558243183211676453364437113102257761375619110058094774204638n],
        [18589054813991789677592248701920316586597315905766931063901311512362520389897n, 9747481100599758927326620954367203586341143512332670485014065220268071749136n],
      ],
      poly: [105201880938868376285366766477114424756147669334972255172494494678535077630n, 2326166543131038196725624593662662293830751231019907770063634445789535294079n, 879694418382616510399898222495152497681785506119418251575565131671947808141n, 509623580847298700446529161625925610682314702057769065710324431328426945574n, 2107452944627222929439317226515489013300838895783317202116660774382394951921n, 551973148467338963430405367773967348017169134194068607607842954293863808301n],
      nonces: [11717404323001910273724775675526816526759259195981807553909265342497343262951n, 21703615709531605026586361868820129162509686662312305468977160698038074762695n, 10554047673169884786082921376609636271097427287007549925304964441830474135012n, 19858980183546948307876849111602627597936616780435776282542494793797817162450n, 15330064224018583829876950708302763460934603545981483092057176356517206244284n, 20992446506506898183159257590018499804901801253603001739627333292773649991644n, 3505327547384026532726698651253234647285697592759055900549605695621321213479n, 21697678366671019516775967657285716236961680329778283903235045566959831471913n, 8517948778929176770341453831200804541208369353141566473914901441017515710639n]}, true);
 await circuit.assertOut(witness, {
    my_pk: [8434954573728081799775069337152334561336051982886843712608922144968411879467n, 7239952865219145558243183211676453364437113102257761375619110058094774204638n],
    comm_input_share: [6687603777631526235108998604543812816186833922543004268460174018170454899382n, 2918404500139960787593206320179533846273414695696096073832116657667506418694n],
    comm_coeffs: 12304775963295635417243614847131129530626522902352185221847579806370706799019n,
    ciphertexts: [1777743847316186082829562484945411079815500883018847504097501186318053935159n, 15188583328899872229061191179156088312743707726442726062395258207180787823895n, 8931719590197860004649135240074109197169514588926432767162028209708162445777n, 12181216174617802868576028035215525888584436248081153005201238161192623326124n, 20546177815060256071661870213601446919606289333798045876215046767030080790682n, 10690443961741665896034958666775661917792527882404402135782864895336563432704n, 15273132772253132203173416039328721315136251308063929884174390570738484058281n, 7379746857873265526743337126111107361228754769437118481076651767789888126983n, 12777954152215014459117446566673513110476307264538764900382008455427149163498n],
    comm_shares: [12795764723295328759812552048015529334581679723888665077737794406546695182668n, 16751917691788738089691803710252886487494763599992373285729431292621540308331n, 456695832555425126677213464981028028756458793160683464828763814482697627957n, 6574206127841238406212358931706634585686070047772857951555946920019969751701n, 15425973276058050326892399176619351681931859993741065568855684733476484289160n, 12147851851550084617717678575204491498863728282011209254696569279378783125946n, 20617838209669390560920696357058443504972209148097804958993478924308680731529n, 633620489639891995222445955522444184928589434324487094806504274388470738178n, 15903105106212273152254212970590606749146144764345986619371393426158235278397n]
    });
    await circuit.checkConstraints(witness);
  });
});
