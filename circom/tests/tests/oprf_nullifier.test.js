const { wasm } = require("circom_tester");
const { expect } = require("chai");
const path = require("path");

describe("Oprf Nullifier (d=10)", function () {
  this.timeout(10000);

  let circuit;
  before(async () => {
    circuit = await wasm(
      path.join(__dirname, "circuits/oprf_nullifier_test.circom"),
      { include: [path.join(__dirname, "../../")] },
    );
    await circuit.loadConstraints();
  });


  it("kat0 success", async () => {
    const witness = await circuit.calculateWitness({user_pk: [
      [780003303138984719163803451934863153481123953526328170404966810056899171668n, 1761531935408045695031814166851633959351447845734079658622361142831410572230n],
      [9068460339790012957796482094668552039600765696826314032620961523454348019016n, 12441163236491508359924007957628683228293951638714275822888214654177152267808n],
      [4153972567514676401448067252219645554242791961695861673451310114284888774547n, 7396036323870700266199405162006230956859299844367274143877258586587337827114n],
      [15960867217708797753565384318158406027539026036377715640062850603393982198707n, 9903419405477365832533872828245842920423779835919046554876820092516112711868n],
      [5435563217311052098910262076908731344193377424319346218363550591990348468894n, 15088660499526273135909776285813510431750515287471951815816775015545927746494n],
      [4122261145881890504976412854710031585908375212896323732387159844320546493458n, 7989337781125781862625978550049975847953413318358581855454140329247282953967n],
      [11424111402163641412653601566328702068397731832579074042253283634150339925264n, 3397809300980885235804174362241369832217431802705669910552686192577329588910n]
    ],
    pk_index: 6n,
    query_s: 2419576084032382499784797454815505262008743893963837990525955547636016843686n,
    query_r: [6536903853589643195933559733678841957733183325158515103444844335497294251162n, 2875888803621596801893132785038524643328195548890514973374225215970436839813n],
    merkle_root: 19455942497878005407112108609547209917090883625833984364123832432134275931482n,
    mt_index: 334n,
    siblings: [
      9922136640310746679589505888952316195107449577468486901753282935448033947801n,
      7072354584330803739893341075959600662170009672799717087821974214692377537543n,
      17885221558895888060441738558710283599239203102366021944096727770820448633434n,
      4176855770021968762089114227379105743389356785527273444730337538746178730938n,
      16310982107959235351382361510657637894710848030823462990603022631860057699843n,
      3605361703005876910845017810180860777095882632272347991398864562553165819321n,
      19777773459105034061589927242511302473997443043058374558550458005274075309994n,
      7293248160986222168965084119404459569735731899027826201489495443245472176528n,
      4950945325831326745155992396913255083324808803561643578786617403587808899194n,
      9839041341834787608930465148119275825945818559056168815074113488941919676716n
    ],
    beta: 1461754204718058952382131100611878377807800194022021491669083238389653439097n,
    rp_id: 13721691983499918028351090247414996537303665840643865831659579087433220869394n,
    action: 10504527072856625374251918935304995810363256944839645422147112326469942932346n,
    dlog_e: 609627200265796365921174121386297233092974263200518402887111313335041962005n,
    dlog_s: 1144439245948005331309848115733947045292314227519811551319619615576514367913n,
    oprf_pk: [18583516951849911137589213560287888058904264954447406129266479391375859118187n, 11275976660222343476638781203652591255100967707193496820837437013048598741240n],
    oprf_response_blinded: [3564184176824737391847466738348363124115862113574313842081174016678481056859n, 16436933207592122491845257645901825252846636209413904685526487305121546849608n],
    oprf_response: [5385546650390668447811833465001780794270235116208160887833354355336834988422n, 13624352007483153607853679953709129973456647592662735912869862404821838120705n],
    signal_hash: 18871704932868136054793192224838481843477328152662874950971209340503970202849n}, true);
 await circuit.assertOut(witness, {
    nullifier: 11128186487694067840779124363611267127161311354464866369174736802002887115221n
    });
    await circuit.checkConstraints(witness);
  });
});
