const { wasm } = require("circom_tester");
const { expect } = require("chai");
const path = require("path");

describe("Oprf RpID Query (d=10)", function () {
  this.timeout(10000);

  let circuit;
  before(async () => {
    circuit = await wasm(
      path.join(__dirname, "circuits/oprf_rpid_query_test.circom"),
      { include: [path.join(__dirname, "../../")] },
    );
    await circuit.loadConstraints();
  });


  it("kat0 success", async () => {
    const witness = await circuit.calculateWitness({pk: [
      [20876467115685831744964716380186496287122173375742892142499831456791222529347n, 20425299924985355912003211477869370683935697569952823805878407983967738503649n],
      [6681948453048013983255761627911788702505354936155269991568256883390179313446n, 8723877505776865515024839262502211300150918870199013908689938091264762530899n],
      [12926335063978273448089741990924527827340544719094547009383816569581332416077n, 13601884821482902342518099314271713773927626584774316227795436923954815979717n],
      [4130007963492660720637731765122568744397613189655952612359789740420106850890n, 20576662661693193716980555685045190114465397988207026522543028144080728038701n],
      [16049022726938350651462726244308661870950145886856667551495358149087906955647n, 16790788826337242979000323587284644516797827205710011602165602634371161788026n],
      [18977877457984476308864773727686557034061540491316611390796218039839204364287n, 8023625091474450895124313425836076622860177782752541763597153889045050983743n],
      [12625385051978946536629895838151681552201645810297121526022779738168478382877n, 18301464868228955677140539568661836545903526156212733248499785338988104713506n]
    ],
    pk_index: 2n,
    s: 2544387773287713608734053405710230027108065671613489570302509455663116748904n,
    r: [3363845127626689743447861014633683878652853187568940761599433063083784220412n, 17543538083054083877587720748168586213072456776118263501603064733823857716461n],
    merkle_root: 4331683039272189563663540815968071801400959179152948260857693220484161659571n,
    mt_index: 619n,
    siblings: [
      14543781253279221655341348046093482030359842858497268799758461103786468968520n,
      11645641403676661130561889787211885818940845317622158566969546584908643962625n,
      585667135721753969363509939300211011246556245223812717046690099385593273174n,
      13831276848914456433029944485688452931943276765267741191127219913539274952909n,
      15123163260382119529154699958310842429671386656986509951998058885724184625211n,
      3698702788246529553998844916267818368435299657182417440867583687256534559455n,
      15009307841198748046734354117872496801061930613634362932433916018409464931320n,
      17755219582132495894705533450858798905341479365658436522558995884914908206475n,
      4510870697710898789031470398971957650637843318989665041899201573351849687225n,
      13728601500714660164204724228361781808217876930452909341427924627120091660145n
    ],
    beta: 1133809722268966527278410873706515222275727184759929321193915927781771650355n,
    nonce: 18563106531117877420227217768313219997461291569855702387772872703620311217590n}, true);
 await circuit.assertOut(witness, {
    q: [7208224543167540286548659172321281433496484554650118861257975411395311474433n, 13079493536037348243531782895019183184459074833103749736093279181886161088265n]
    });
    await circuit.checkConstraints(witness);
  });
});
