// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "forge-std/Test.sol";
// Import your verifier contract - adjust path as needed
import "../src/Groth16Verifier.sol";

contract G16VerifierTest is Test {
    Groth16Verifier public verifier;

    function setUp() public {
        verifier = new Groth16Verifier();
    }

    function testValidProof() public {
        uint[2] memory a = [
            11468312949660864720429384337059670254676757541106984351883106197231676331091,
            21560358938855909614179660361638410317406061096686392551110873609152313723109
        ];

        uint[2][2] memory b = [
            [
                13980735654856460516138664573684586245924121068887112274291276365337539666387,
                1397686996180224672356736405336363147127650825259727108741836519542724073549
            ],
            [
                15968577707534258110766194616852883078287268231758202275139689991817632376051,
                469385223440505726293960417901985434579356989079082282124441130782779936314
            ]
        ];

        uint[2] memory c = [
            3828322601558746243527055852380149288514094431838454636266089925907567679932,
            17157137033268191615882850272980802574559493710030675183074422207142524601595
        ];

        uint[24] memory publicInputs = [
            uint256(12266518075321185797589213532529011619734935414538300173788220522564798423235),
            uint256(9255769123798898149953956649378827479482860591468882466861237176479881872723),
            uint256(8877462399555945640480352492384831296250368331849204127836387507013104108526),
            uint256(12631578230906775280794624255429491101400272482084813319607964027266411768781),
            uint256(10205653472383472488460086772914067351086846265958759657301844448460926571680),
            uint256(12516440285411826786488393729181852955056729344716724525960091951044647653599),
            uint256(16975626554934773333990238653479791437475071502682450338677582176538684668386),
            uint256(10992448926546190201408689558740052308140915979466990124400156321727043134834),
            uint256(20367068389700016202738591873020896263520259691531819894712948288043834304716),
            uint256(659148035290194116254646018585218061530651957523574443961880551765821062297),
            uint256(2921312310036426493358859436494592988052601788337886029974845598317363250844),
            uint256(10978475984719372499905328185911196421720951744571240239767067517059248071653),
            uint256(5774906195600420545408082827191749158707796026354858181412974772508107763669),
            uint256(16500991884686672355460614453662597856273297492358612952380955536381842267525),
            uint256(1),
            uint256(1918506960356052592250645643564153987471142747759193561574073802325049212928),
            uint256(18140162239983131849346838246485360180462820807127348324812097711560806367232),
            uint256(19073391701462346724876164917900366752759475209209991802186600260493388021760),
            uint256(13055503748124824218507870140538419803140480795435834229229760919434237575168),
            uint256(19187525471008459097508586080877286328315161835320367150266572407467403116544),
            uint256(4734660263677069481471877790974401255879730803634753754107037821651474448384),
            uint256(18788263614476327212261984658076727094194233323277639391448847593238983344128),
            uint256(2242242191598544219883711217843414152398659753497348717266486535244044304384),
            uint256(6146817087726914709223289044796148798688490938256583422678060326361342410752)
        ];

        bool result = verifier.verifyProof(a, b, c, publicInputs);
        assertTrue(result, "Valid proof should verify");
    }

    function testInvalidProof() public {
        uint[2] memory a = [
            11468312949660864720429384337059670254676757541106984351883106197231676331091,
            21560358938855909614179660361638410317406061096686392551110873609152313723109
        ];

        uint[2][2] memory b = [
            [
                13980735654856460516138664573684586245924121068887112274291276365337539666387,
                1397686996180224672356736405336363147127650825259727108741836519542724073549
            ],
            [
                15968577707534258110766194616852883078287268231758202275139689991817632376051,
                469385223440505726293960417901985434579356989079082282124441130782779936314
            ]
        ];


        uint[2] memory c = [
            3828322601558746243527055852380149288514094431838454636266089925907567679932 + 1,
            17157137033268191615882850272980802574559493710030675183074422207142524601595
        ];

        uint[24] memory publicInputs = [
            uint256(12266518075321185797589213532529011619734935414538300173788220522564798423235),
            uint256(9255769123798898149953956649378827479482860591468882466861237176479881872723),
            uint256(8877462399555945640480352492384831296250368331849204127836387507013104108526),
            uint256(12631578230906775280794624255429491101400272482084813319607964027266411768781),
            uint256(10205653472383472488460086772914067351086846265958759657301844448460926571680),
            uint256(12516440285411826786488393729181852955056729344716724525960091951044647653599),
            uint256(16975626554934773333990238653479791437475071502682450338677582176538684668386),
            uint256(10992448926546190201408689558740052308140915979466990124400156321727043134834),
            uint256(20367068389700016202738591873020896263520259691531819894712948288043834304716),
            uint256(659148035290194116254646018585218061530651957523574443961880551765821062297),
            uint256(2921312310036426493358859436494592988052601788337886029974845598317363250844),
            uint256(10978475984719372499905328185911196421720951744571240239767067517059248071653),
            uint256(5774906195600420545408082827191749158707796026354858181412974772508107763669),
            uint256(16500991884686672355460614453662597856273297492358612952380955536381842267525),
            uint256(1),
            uint256(1918506960356052592250645643564153987471142747759193561574073802325049212928),
            uint256(18140162239983131849346838246485360180462820807127348324812097711560806367232),
            uint256(19073391701462346724876164917900366752759475209209991802186600260493388021760),
            uint256(13055503748124824218507870140538419803140480795435834229229760919434237575168),
            uint256(19187525471008459097508586080877286328315161835320367150266572407467403116544),
            uint256(4734660263677069481471877790974401255879730803634753754107037821651474448384),
            uint256(18788263614476327212261984658076727094194233323277639391448847593238983344128),
            uint256(2242242191598544219883711217843414152398659753497348717266486535244044304384),
            uint256(6146817087726914709223289044796148798688490938256583422678060326361342410752)
        ];

        bool result = verifier.verifyProof(a, b, c, publicInputs);
        assertFalse(result, "Invalid proof should not verify");
    }

    function testInvalidPublicInputs() public {
        uint[2] memory a = [
            11468312949660864720429384337059670254676757541106984351883106197231676331091,
            21560358938855909614179660361638410317406061096686392551110873609152313723109
        ];

        uint[2][2] memory b = [
            [
                13980735654856460516138664573684586245924121068887112274291276365337539666387,
                1397686996180224672356736405336363147127650825259727108741836519542724073549
            ],
            [
                15968577707534258110766194616852883078287268231758202275139689991817632376051,
                469385223440505726293960417901985434579356989079082282124441130782779936314
            ]
        ];

        uint[2] memory c = [
            3828322601558746243527055852380149288514094431838454636266089925907567679932,
            17157137033268191615882850272980802574559493710030675183074422207142524601595
        ];

        uint[24] memory wrongInputs = [
            uint256(12266518075321185797589213532529011619734935414538300173788220522564798423235) + 1,
            uint256(9255769123798898149953956649378827479482860591468882466861237176479881872723),
            uint256(8877462399555945640480352492384831296250368331849204127836387507013104108526),
            uint256(12631578230906775280794624255429491101400272482084813319607964027266411768781),
            uint256(10205653472383472488460086772914067351086846265958759657301844448460926571680),
            uint256(12516440285411826786488393729181852955056729344716724525960091951044647653599),
            uint256(16975626554934773333990238653479791437475071502682450338677582176538684668386),
            uint256(10992448926546190201408689558740052308140915979466990124400156321727043134834),
            uint256(20367068389700016202738591873020896263520259691531819894712948288043834304716),
            uint256(659148035290194116254646018585218061530651957523574443961880551765821062297),
            uint256(2921312310036426493358859436494592988052601788337886029974845598317363250844),
            uint256(10978475984719372499905328185911196421720951744571240239767067517059248071653),
            uint256(5774906195600420545408082827191749158707796026354858181412974772508107763669),
            uint256(16500991884686672355460614453662597856273297492358612952380955536381842267525),
            uint256(1),
            uint256(1918506960356052592250645643564153987471142747759193561574073802325049212928),
            uint256(18140162239983131849346838246485360180462820807127348324812097711560806367232),
            uint256(19073391701462346724876164917900366752759475209209991802186600260493388021760),
            uint256(13055503748124824218507870140538419803140480795435834229229760919434237575168),
            uint256(19187525471008459097508586080877286328315161835320367150266572407467403116544),
            uint256(4734660263677069481471877790974401255879730803634753754107037821651474448384),
            uint256(18788263614476327212261984658076727094194233323277639391448847593238983344128),
            uint256(2242242191598544219883711217843414152398659753497348717266486535244044304384),
            uint256(6146817087726914709223289044796148798688490938256583422678060326361342410752)
        ];

        bool result = verifier.verifyProof(a, b, c, wrongInputs);
        assertFalse(result, "Proof with wrong public inputs should not verify");
    }
}
